{"version":3,"file":"component---src-pages-publications-js-1e54d21492a6e387d84c.js","mappings":"oNAGA,MAAMA,EAAuB,CAC3B,uBACA,QACA,0CACA,oBACA,OACA,eACA,iBAiEF,MA5CyBC,IAA+B,IAA9B,gBAAEC,EAAkB,IAAID,EAChD,MAAME,EAnBoBC,IACnBA,EAAaC,QAAO,CAACF,EAAqBG,KAC/C,MAAMC,EAAOD,EAAYE,kBACnBC,EAAOH,EAAYI,gBAWzB,OATKP,EAAoBI,KACvBJ,EAAoBI,GAAQ,CAAC,GAG1BJ,EAAoBI,GAAME,KAC7BN,EAAoBI,GAAME,GAAQ,IAGpCN,EAAoBI,GAAME,GAAME,KAAKL,GAC9BH,CAAmB,GACzB,CAAC,GAIwBS,CAAmBV,GAE/C,OACEW,EAAAA,cAAA,OAAKC,UAAU,qBAAqBC,GAAG,gBACrCF,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,MAAIC,UAAU,cAAa,gBAC3BD,EAAAA,cAAA,OAAKC,UAAU,oBACZE,OAAOC,QAAQd,GACbe,MAAK,CAAAC,EAAAC,KAAA,IAAEC,GAAMF,GAAGG,GAAMF,EAAA,OAAKE,EAAQD,CAAK,IACxCE,KAAIC,IAAA,IAAEjB,EAAMkB,GAAMD,EAAA,OACjBX,EAAAA,cAAA,OAAKa,IAAKnB,EAAMO,UAAU,gBACxBD,EAAAA,cAAA,MAAIC,UAAU,eAAeP,GAC5BP,EACE2B,QAAOlB,GAAQgB,EAAMhB,KACrBc,KAAId,GACHI,EAAAA,cAAA,OAAKa,IAAKjB,EAAMK,UAAU,gBACxBD,EAAAA,cAAA,MAAIC,UAAU,eAAeL,GAC5BgB,EAAMhB,GAAMc,KAAIjB,GACfO,EAAAA,cAAA,OAAKa,IAAKpB,EAAYsB,QAASd,UAAU,oBACvCD,EAAAA,cAAA,OAAKC,UAAU,wBACbD,EAAAA,cAAA,UAAKP,EAAYuB,OACjBhB,EAAAA,cAAA,UAAKP,EAAYsB,SAChBtB,EAAYwB,UAAqC,SAAzBxB,EAAYwB,UACnCjB,EAAAA,cAAA,MAAIkB,wBAAyB,CAAEC,OAAO,MAAO1B,EAAYwB,SAAQ,UAElExB,EAAY2B,SAAmC,SAAxB3B,EAAY2B,UACjC3B,EAAY2B,QAAQC,WAAW,YAAc5B,EAAY2B,QAAQC,WAAW,cAC3ErB,EAAAA,cAAA,KAAGsB,KAAM7B,EAAY2B,QAASG,OAAO,SAASC,IAAI,uBAAsB,gBAQpF,MAIV,ECnCV,MA9ByBpC,IAAmB,IAAlB,SAAEqC,GAAUrC,EACpC,MAAMsC,GAAOC,EAAAA,EAAAA,gBAAe,cAsB5B,OACE3B,EAAAA,cAAC4B,EAAAA,EAAM,KACL5B,EAAAA,cAAC6B,EAAgB,CAAC3B,GAAG,eAAeb,gBAAiBqC,EAAKI,aAAaC,QAChE,C","sources":["webpack://gatsby-starter-default/./src/components/publication_table.js","webpack://gatsby-starter-default/./src/pages/publications.js"],"sourcesContent":["import * as React from \"react\";\nimport \"./publication_table.css\";\n\nconst publicationTypeOrder = [\n  \"Journal Publications\",\n  \"arXiv\",\n  \"Conference Presentations & Publications\",\n  \"Technical Reports\",\n  \"Book\",\n  \"Edited Books\",\n  \"Book Chapters\"\n];\n\nconst groupByYearAndType = (publications) => {\n  return publications.reduce((groupedPublications, publication) => {\n    const year = publication.PublishedDateYear;\n    const type = publication.PublicationType;\n\n    if (!groupedPublications[year]) {\n      groupedPublications[year] = {};\n    }\n\n    if (!groupedPublications[year][type]) {\n      groupedPublications[year][type] = [];\n    }\n\n    groupedPublications[year][type].push(publication);\n    return groupedPublications;\n  }, {});\n};\n\nconst PublicationTable = ({ publicationData = [] }) => {\n  const groupedPublications = groupByYearAndType(publicationData);\n\n  return (\n    <div className=\"publications-class\" id=\"publications\">\n      <div className=\"publication-container\">\n        <h4 className=\"header-sub\">Publications</h4>\n        <div className=\"publication-list\">\n          {Object.entries(groupedPublications)\n            .sort(([year1], [year2]) => year2 - year1)\n            .map(([year, types]) => (\n              <div key={year} className=\"year-section\">\n                <h3 className=\"year-header\">{year}</h3>\n                {publicationTypeOrder\n                  .filter(type => types[type])\n                  .map(type => (\n                    <div key={type} className=\"type-section\">\n                      <h4 className=\"type-header\">{type}</h4>\n                      {types[type].map(publication => (\n                        <div key={publication.Authors} className=\"publication-card\">\n                          <div className=\"lower-container-pubs\">\n                            <h3>{publication.Title}</h3>\n                            <h4>{publication.Authors}</h4>\n                            {publication.Location && publication.Location !== 'NULL' &&\n                              <h4 dangerouslySetInnerHTML={{ __html: `<i>${publication.Location}</i>` }}></h4>\n                            }\n                            {publication.PDFLink && publication.PDFLink !== 'NULL' && (\n                              (publication.PDFLink.startsWith('http://') || publication.PDFLink.startsWith('https://')) && (\n                                <a href={publication.PDFLink} target=\"_blank\" rel=\"noopener noreferrer\">(pdf)</a>\n                              )\n                            )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PublicationTable;\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport PublicationTable from \"../components/publication_table\"\n\nconst PublicationsPage = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query CsvQuery {\n      allPapersCsv {\n        nodes{\n          Title\n          Location\n          PublicationType\n          PublishedDateMonth\n          PublishedDateYear\n          PDFLink\n          LocalPDFLink\n          Abstract\n          RegisterDate\n          Authors\n          sortOrder\n          ProjectLink\n          OtherAuthors\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <PublicationTable id='publications' publicationData={data.allPapersCsv.nodes}></PublicationTable>\n    </Layout>\n  )\n}\n\nexport default PublicationsPage\n"],"names":["publicationTypeOrder","_ref","publicationData","groupedPublications","publications","reduce","publication","year","PublishedDateYear","type","PublicationType","push","groupByYearAndType","React","className","id","Object","entries","sort","_ref2","_ref3","year1","year2","map","_ref4","types","key","filter","Authors","Title","Location","dangerouslySetInnerHTML","__html","PDFLink","startsWith","href","target","rel","children","data","useStaticQuery","Layout","PublicationTable","allPapersCsv","nodes"],"sourceRoot":""}