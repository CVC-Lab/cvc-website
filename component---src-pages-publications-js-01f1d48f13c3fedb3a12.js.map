{"version":3,"file":"component---src-pages-publications-js-01f1d48f13c3fedb3a12.js","mappings":"wOAKA,MAAMA,EAAuB,CAC3B,uBACA,QACA,0CACA,oBACA,OACA,eACA,iBAoHF,MA/FyBC,KACvB,MAAOC,EAAiBC,GAAsBC,EAAAA,SAAe,IAE7DA,EAAAA,WAAgB,KACd,MAAMC,GAAQC,EAAAA,EAAAA,IACZC,EAAAA,EACA,wDAEFC,EAAAA,EAAAA,IAAIH,GACDI,MAAKC,IACAA,EAASC,UACXR,EAAmBS,OAAOC,OAAOH,EAASI,OAC5C,IAEDC,OAAMC,IACLC,QAAQD,MAAM,kBAAmBA,EAAM,GACvC,GACH,IAEH,MAAME,EArCmBC,IAClBA,EAAaC,QAAO,CAACF,EAAqBG,KAC/C,MAAMC,EAAOD,EAAYE,kBACnBC,EAAOH,EAAYI,gBAWzB,OATKP,EAAoBI,KACvBJ,EAAoBI,GAAQ,CAAC,GAG1BJ,EAAoBI,GAAME,KAC7BN,EAAoBI,GAAME,GAAQ,IAGpCN,EAAoBI,GAAME,GAAME,KAAKL,GAC9BH,CAAmB,GACzB,CAAC,GAsBwBS,CAAmBzB,GAE/C,OACEE,EAAAA,cAAA,OAAKwB,UAAU,qBAAqBC,GAAG,gBACrCzB,EAAAA,cAAA,OAAKwB,UAAU,yBACbxB,EAAAA,cAAA,MAAIwB,UAAU,cAAa,gBAC3BxB,EAAAA,cAAA,OAAKwB,UAAU,oBACZhB,OAAOkB,QAAQZ,GACba,MAAK,CAAAC,EAAAC,KAAA,IAAEC,GAAMF,GAAGG,GAAMF,EAAA,OAAKE,EAAQD,CAAK,IACxCE,KAAIC,IAAA,IAAEf,EAAMgB,GAAMD,EAAA,OACjBjC,EAAAA,cAAA,OAAKmC,IAAKjB,EAAMM,UAAU,gBACxBxB,EAAAA,cAAA,MAAIwB,UAAU,eAAeN,GAC5BtB,EACEwC,QAAOhB,GAAQc,EAAMd,KACrBY,KAAIZ,GACHpB,EAAAA,cAAA,OAAKmC,IAAKf,EAAMI,UAAU,gBACxBxB,EAAAA,cAAA,MAAIwB,UAAU,eAAeJ,GAC5Bc,EAAMd,GAAMY,KAAIf,GACfjB,EAAAA,cAAA,OACEmC,IAAKlB,EAAYoB,QACjBb,UAAU,oBAEVxB,EAAAA,cAAA,OAAKwB,UAAU,wBACbxB,EAAAA,cAAA,UAAKiB,EAAYqB,OACjBtC,EAAAA,cAAA,UAAKiB,EAAYoB,SAChBpB,EAAYsB,UACc,SAAzBtB,EAAYsB,UACVvC,EAAAA,cAAA,MACEwC,wBAAyB,CACvBC,OAAO,MAAOxB,EAAYsB,SAAQ,UAIzCtB,EAAYyB,SACa,SAAxBzB,EAAYyB,UACXzB,EAAYyB,QAAQC,WAAW,YAC9B1B,EAAYyB,QAAQC,WAAW,cAC/B3C,EAAAA,cAAA,WACEA,EAAAA,cAAA,KACE4C,KAAM3B,EAAYyB,QAClBG,OAAO,SACPC,IAAI,uBACL,oBAKN7B,EAAY8B,aACiB,SAA5B9B,EAAY8B,cACX9B,EAAY8B,YAAYJ,WAAW,YAClC1B,EAAY8B,YAAYJ,WACtB,cAEF3C,EAAAA,cAAA,WACEA,EAAAA,cAAA,KACE4C,KAAM3B,EAAY8B,YAClBF,OAAO,SACPC,IAAI,uBACL,wBAUf,MAIV,ECrFV,MAjCyBlB,IAAmB,IAAlB,SAAEoB,GAAUpB,EACpC,MAAMqB,GAAOC,EAAAA,EAAAA,gBAAe,cAsB5B,OACElD,EAAAA,cAACmD,EAAAA,EAAM,KACLnD,EAAAA,cAACH,EAAgB,CACf4B,GAAG,eACH3B,gBAAiBmD,EAAKG,aAAaC,QAE9B,C","sources":["webpack://gatsby-starter-default/./src/components/publication_table.js","webpack://gatsby-starter-default/./src/pages/publications.js"],"sourcesContent":["import * as React from \"react\"\nimport \"./publication_table.css\"\nimport { database } from \"../data/database\"\nimport { ref, get } from \"firebase/database\"\n\nconst publicationTypeOrder = [\n  \"Journal Publications\",\n  \"arXiv\",\n  \"Conference Presentations & Publications\",\n  \"Technical Reports\",\n  \"Book\",\n  \"Edited Books\",\n  \"Book Chapters\",\n]\n\nconst groupByYearAndType = publications => {\n  return publications.reduce((groupedPublications, publication) => {\n    const year = publication.PublishedDateYear\n    const type = publication.PublicationType\n\n    if (!groupedPublications[year]) {\n      groupedPublications[year] = {}\n    }\n\n    if (!groupedPublications[year][type]) {\n      groupedPublications[year][type] = []\n    }\n\n    groupedPublications[year][type].push(publication)\n    return groupedPublications\n  }, {})\n}\n\nconst PublicationTable = () => {\n  const [publicationData, setPublicationData] = React.useState([])\n\n  React.useEffect(() => {\n    const dbRef = ref(\n      database,\n      \"1InxBkoDuYJs2Vdk-roy03CmDgaz4T3Xt-QGVapgn0C0/Papers\"\n    )\n    get(dbRef)\n      .then(snapshot => {\n        if (snapshot.exists()) {\n          setPublicationData(Object.values(snapshot.val()))\n        }\n      })\n      .catch(error => {\n        console.error(\"Firebase error:\", error)\n      })\n  }, [])\n\n  const groupedPublications = groupByYearAndType(publicationData)\n\n  return (\n    <div className=\"publications-class\" id=\"publications\">\n      <div className=\"publication-container\">\n        <h4 className=\"header-sub\">Publications</h4>\n        <div className=\"publication-list\">\n          {Object.entries(groupedPublications)\n            .sort(([year1], [year2]) => year2 - year1)\n            .map(([year, types]) => (\n              <div key={year} className=\"year-section\">\n                <h3 className=\"year-header\">{year}</h3>\n                {publicationTypeOrder\n                  .filter(type => types[type])\n                  .map(type => (\n                    <div key={type} className=\"type-section\">\n                      <h4 className=\"type-header\">{type}</h4>\n                      {types[type].map(publication => (\n                        <div\n                          key={publication.Authors}\n                          className=\"publication-card\"\n                        >\n                          <div className=\"lower-container-pubs\">\n                            <h3>{publication.Title}</h3>\n                            <h4>{publication.Authors}</h4>\n                            {publication.Location &&\n                              publication.Location !== \"NULL\" && (\n                                <h4\n                                  dangerouslySetInnerHTML={{\n                                    __html: `<i>${publication.Location}</i>`,\n                                  }}\n                                ></h4>\n                              )}\n                            {publication.PDFLink &&\n                              publication.PDFLink !== \"NULL\" &&\n                              (publication.PDFLink.startsWith(\"http://\") ||\n                                publication.PDFLink.startsWith(\"https://\")) && (\n                                <div>\n                                  <a\n                                    href={publication.PDFLink}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                  >\n                                    Publication PDF\n                                  </a>\n                                </div>\n                              )}\n                            {publication.ProjectLink &&\n                              publication.ProjectLink !== \"NULL\" &&\n                              (publication.ProjectLink.startsWith(\"http://\") ||\n                                publication.ProjectLink.startsWith(\n                                  \"https://\"\n                                )) && (\n                                <div>\n                                  <a\n                                    href={publication.ProjectLink}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                  >\n                                    Project Page\n                                  </a>\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PublicationTable\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport PublicationTable from \"../components/publication_table\"\n\nconst PublicationsPage = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query CsvQuery {\n      allPapersCsv {\n        nodes {\n          Title\n          Location\n          PublicationType\n          PublishedDateMonth\n          PublishedDateYear\n          PDFLink\n          LocalPDFLink\n          Abstract\n          RegisterDate\n          Authors\n          sortOrder\n          ProjectLink\n          OtherAuthors\n        }\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <PublicationTable\n        id=\"publications\"\n        publicationData={data.allPapersCsv.nodes}\n      ></PublicationTable>\n    </Layout>\n  )\n}\n\nexport default PublicationsPage\n"],"names":["publicationTypeOrder","PublicationTable","publicationData","setPublicationData","React","dbRef","ref","database","get","then","snapshot","exists","Object","values","val","catch","error","console","groupedPublications","publications","reduce","publication","year","PublishedDateYear","type","PublicationType","push","groupByYearAndType","className","id","entries","sort","_ref","_ref2","year1","year2","map","_ref3","types","key","filter","Authors","Title","Location","dangerouslySetInnerHTML","__html","PDFLink","startsWith","href","target","rel","ProjectLink","children","data","useStaticQuery","Layout","allPapersCsv","nodes"],"sourceRoot":""}