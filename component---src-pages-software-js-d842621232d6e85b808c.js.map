{"version":3,"file":"component---src-pages-software-js-d842621232d6e85b808c.js","mappings":"oNAsDA,MAlDqBA,IAA2B,IAA1B,iBAAEC,GAAkBD,EAExC,MAAME,EAAgB,CACpB,MAAS,8DACT,gBAAiB,mEACjB,IAAO,4DACP,IAAO,4DACP,eAAgB,uEAwBlB,OACEC,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAAA,UAAI,qBACHF,EAAiBI,KAAIC,GACpBH,EAAAA,cAAA,OAAKI,IAAKD,EAASA,UACjBH,EAAAA,cAAA,UAAKG,EAASA,UACdH,EAAAA,cAAA,UACGG,EAASE,MAAMH,KAAII,GAClBN,EAAAA,cAAA,MAAII,IAAKE,EAAKC,MA5BND,KAClBE,QAAQC,IAAI,SACZ,MAAMC,EAAeJ,EAAKC,KAAKI,QAAQ,WAAY,KAAKC,cAGxD,OAFAJ,QAAQC,IAAI,YAAaC,GAErBX,EAAcO,EAAKC,KAAKK,eAExBZ,EAAAA,cAAA,KAAGa,KAAMd,EAAcO,EAAKC,KAAKK,eAAgBE,OAAO,SAASC,IAAI,uBACnEf,EAAAA,cAAA,cAASM,EAAKC,OAKhBP,EAAAA,cAACgB,EAAAA,KAAU,CAACC,GAAK,aAAYP,KAC3BV,EAAAA,cAAA,cAASM,EAAKC,MAGpB,EAYaW,CAAWZ,GAAM,KAAGA,EAAKa,mBAMhC,EClBV,MA3BqBC,KACnBZ,QAAQC,IAAI,MACZ,MAgBMX,GAhBOuB,EAAAA,EAAAA,gBAAe,cAgBEC,KAAKC,aAAazB,iBAEhD,OADAU,QAAQC,IAAI,oBAAqBX,GAE/BE,EAAAA,cAACwB,EAAAA,EAAM,KACLxB,EAAAA,cAACyB,EAAY,CAAC3B,iBAAkBA,IACzB,C","sources":["webpack://gatsby-starter-default/./src/components/software_list.js","webpack://gatsby-starter-default/./src/pages/software.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link as LinkRouter } from \"gatsby\";\nimport \"./software_list.css\";\n\nconst SoftwareList = ({ softwareProjects }) => {\n  // Define a mapping of software names to external URLs\n  const externalLinks = {\n    \"prism\": \"https://www.cs.utexas.edu/%7Ebajaj/cvc/software/prism.shtml\",\n    \"pocket/tunnel\": \"https://www.cs.utexas.edu/%7Ebajaj/cvc/software/Pocktunnel.shtml\",\n    \"qhm\": \"https://www.cs.utexas.edu/%7Ebajaj/cvc/software/QHM.shtml\",\n    \"qtm\": \"https://www.cs.utexas.edu/%7Ebajaj/cvc/software/QTM.shtml\",\n    \"gpu renderer\": \"https://www.cs.utexas.edu/%7Ebajaj/cvc/software/SurfVolRender.shtml\"\n    // ... add other software names and their external URLs as needed\n  };\n\n  const renderLink = (item) => {\n    console.log(\"HELLO\")\n    const itemNameSlug = item.name.replace(/[\\s\\/]+/g, '-').toLowerCase();\n    console.log(\"itemName:\", itemNameSlug)\n    // Check if the item has a specified external link\n    if (externalLinks[item.name.toLowerCase()]) {\n      return (\n        <a href={externalLinks[item.name.toLowerCase()]} target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>{item.name}</strong>\n        </a>\n      );\n    } else {\n      return (\n        <LinkRouter to={`/software/${itemNameSlug}`}>\n          <strong>{item.name}</strong>\n        </LinkRouter>\n      );\n    }\n  };\n\n  return (\n    <div className='software'>\n      <h1>Software Projects</h1>\n      {softwareProjects.map(category => (\n        <div key={category.category}>\n          <h2>{category.category}</h2>\n          <ul>\n            {category.items.map(item => (\n              <li key={item.name}>\n                {renderLink(item)}: {item.description}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SoftwareList;\n","import * as React from \"react\"\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport Layout from \"../components/layout\";  // Adjust the path to your layout component\nimport SoftwareList from \"../components/software_list\";  // Assuming you have a SoftwareList component\n\nconst SoftwarePage = () => {\n  console.log(\"HI\")\n  const data = useStaticQuery(graphql`\n    query SoftwareQuery {\n      site {\n        siteMetadata {\n          softwareProjects {\n            category\n            items {\n              name\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const softwareProjects = data.site.siteMetadata.softwareProjects;\n  console.log('softwareProjects:', softwareProjects);\n  return (\n    <Layout>\n      <SoftwareList softwareProjects={softwareProjects} />\n    </Layout>\n  );\n};\n\nexport default SoftwarePage;"],"names":["_ref","softwareProjects","externalLinks","React","className","map","category","key","items","item","name","console","log","itemNameSlug","replace","toLowerCase","href","target","rel","LinkRouter","to","renderLink","description","SoftwarePage","useStaticQuery","site","siteMetadata","Layout","SoftwareList"],"sourceRoot":""}