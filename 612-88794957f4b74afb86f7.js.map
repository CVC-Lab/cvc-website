{"version":3,"file":"612-88794957f4b74afb86f7.js","mappings":"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","sources":["webpack://cvc-website/./src/components/news_tiles.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport \"./tiles.css\"\n\nconst NewsTiles = ({ newsTiles }) => {\n  // Always declare hooks at the top level\n  const [currentPage, setCurrentPage] = useState(1)\n  \n  // Wrap the initialization of safeNewsTiles in its own useMemo\n  const safeNewsTiles = React.useMemo(() => {\n    return Array.isArray(newsTiles) ? newsTiles : []\n  }, [newsTiles])\n  \n  // Sort the news tiles by date (always run, even if empty array)\n  const sortedNewsTiles = React.useMemo(() => {\n    if (safeNewsTiles.length === 0) return []\n    \n    return [...safeNewsTiles].sort((a, b) => {\n      const dateDifference = new Date(b.date) - new Date(a.date)\n      if (dateDifference !== 0) return dateDifference\n      return b.name.localeCompare(a.name)\n    })\n  }, [safeNewsTiles])\n\n  const tilesPerPage = 20\n  const lastTile = currentPage * tilesPerPage\n  const firstTile = lastTile - tilesPerPage\n  \n  // Calculate current page of tiles (always run, even if empty array)\n  const currentTiles = React.useMemo(() => {\n    return sortedNewsTiles.slice(firstTile, lastTile)\n  }, [sortedNewsTiles, firstTile, lastTile])\n\n  const paginate = pageNumber => setCurrentPage(pageNumber)\n  \n  // Render placeholder if no news items\n  if (safeNewsTiles.length === 0) {\n    return (\n      <div className=\"error-container\" style={{ padding: \"2rem\", textAlign: \"center\" }}>\n        <h2>No news items found</h2>\n        <p>Please check back later for updates.</p>\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className=\"publications-class\"\n      id=\"news\"\n      style={{\n        background: \"white\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        textAlign: `left`,\n      }}\n    >\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 1050,\n          paddingBottom: `1.45rem`,\n          marginLeft: `1.25rem`,\n          marginRight: `1.25rem`,\n          width: `100%`,\n        }}\n      >\n        <h1\n          className=\"header-subtitle\"\n          style={{\n            color: `#333f48`,\n            fontSize: `1.5rem`,\n            fontWeight: `700`,\n            margin: `auto`,\n            textAlign: `center`,\n            paddingBottom: `1.0rem`,\n            paddingTop: `2.0rem`,\n            marginBottom: \"1rem\",\n          }}\n        >\n          News\n        </h1>\n        <div>\n          {currentTiles.map(tile => {\n            // Ensure date is valid\n            let dateString = \"\";\n            try {\n              const date = new Date(tile.date)\n              if (!isNaN(date.getTime())) {\n                dateString = `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`\n              } else {\n                dateString = \"Date unknown\"\n              }\n            } catch (error) {\n              dateString = \"Date unknown\"\n            }\n\n            const isExternalLink = tile.link && (\n              tile.link.startsWith('http://') || \n              tile.link.startsWith('https://')\n            )\n\n            return (\n              <div\n                key={tile.name}\n                style={{ display: \"flex\", marginBottom: \"1.5rem\" }}\n              >\n                <div\n                  className=\"lower-container-pubs\"\n                  style={{ width: \"120px\", textAlign: \"right\" }}\n                >\n                  <h3>{dateString}</h3>\n                </div>\n                <div style={{ flexBasis: \"80%\" }}>\n                  {isExternalLink ? (\n                    <a\n                      style={{\n                        color: `#333f48`,\n                        textDecoration: `none`,\n                        fontSize: `.73rem`,\n                      }}\n                      href={tile.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <div className=\"lower-container-pubs\">\n                        <h3>{tile.name}</h3>\n                        {tile.description && <h4>{tile.description}</h4>}\n                      </div>\n                    </a>\n                  ) : (\n                    <Link\n                      style={{\n                        color: `#333f48`,\n                        textDecoration: `none`,\n                        fontSize: `.73rem`,\n                      }}\n                      to={tile.link || \"#\"}\n                    >\n                      <div className=\"lower-container-pubs\">\n                        <h3>{tile.name}</h3>\n                        {tile.description && <h4>{tile.description}</h4>}\n                      </div>\n                    </Link>\n                  )}\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n          {[\n            ...Array(Math.ceil(sortedNewsTiles.length / tilesPerPage)).keys(),\n          ].map(pageNumber => (\n            <button\n              key={pageNumber + 1}\n              onClick={() => paginate(pageNumber + 1)}\n              style={{\n                backgroundColor:\n                  currentPage === pageNumber + 1 ? \"#333f48\" : \"transparent\",\n                color: currentPage === pageNumber + 1 ? \"#fff\" : \"#333f48\",\n                border: \"1px solid #333f48\",\n                padding: \"0.5rem\",\n                margin: \"0.5rem\",\n                cursor: \"pointer\",\n              }}\n            >\n              {pageNumber + 1}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewsTiles"],"names":["_ref","newsTiles","currentPage","setCurrentPage","useState","safeNewsTiles","React","Array","isArray","sortedNewsTiles","length","_toConsumableArray","sort","a","b","dateDifference","Date","date","name","localeCompare","lastTile","firstTile","currentTiles","slice","className","style","padding","textAlign","id","background","display","alignItems","justifyContent","margin","maxWidth","paddingBottom","marginLeft","marginRight","width","color","fontSize","fontWeight","paddingTop","marginBottom","map","tile","dateString","isNaN","getTime","getMonth","getDate","getFullYear","error","isExternalLink","link","startsWith","key","flexBasis","textDecoration","href","target","rel","description","Link","to","marginTop","Math","ceil","keys","pageNumber","onClick","paginate","backgroundColor","border","cursor"],"sourceRoot":""}